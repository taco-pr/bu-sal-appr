
close all;
clear all;


addpath('/home/robert/uni/matlabfns/NaN');
addpath('/home/robert/uni/taco/data/new');
addpath('/home/robert/uni/taco/svn.taco-project.eu/WP04/Software/SourceCode/Drafts/Libraries/matlab/NetCDF');

%% READ DATA
% KINECT
r = readCDF('kinect_with_RGB.cdf',20,1);
img = r.data(:,:,4:6)/255;

% LASER
%r = readCDF('seq_007.cdf',40,1);
%img = repmat(r.data(:,:,4)/max(max(r.data(:,:,4))),[1 1 3]);


img_range = sqrt(r.data(:,:,1).^2 + r.data(:,:,2).^2 + r.data(:,:,3).^2);
img_xyz = r.data(:,:,1:3);


% remove every 'st'-th row
st = 1;
img_range = img_range(1:st:end,:,:);
img = img(1:st:end,:,:);
img_xyz = img_xyz(1:st:end,:,:);

figure;imagesc(img_range);colormap(gray);
NoRangeIndex = isnan(img_range);

%% KILL NANS AND ZEROS!!!!!!!!
while true
    nr = isnan(img_range) | (img_range==0);
    if sum(nr)==0 
        break;
    end
    
    f = [1 1 1;1 1 1; 1 1 1]/9;
    f = [2 2 2;1 1 1; 2 2 2]/9;    
    
    t = nanconv2(img_range,f);
    u1 = nanconv2(img_xyz(:,:,1),f);
    u2 = nanconv2(img_xyz(:,:,2),f);
    u3 = nanconv2(img_xyz(:,:,3),f);
    b=1; % because nancon2 is bigger;
    t=t(1+b:end-b,1+b:end-b);
    img_range(nr) = t(nr);
    
    u1=u1(1+b:end-b,1+b:end-b);
    u2=u2(1+b:end-b,1+b:end-b);
    u3=u3(1+b:end-b,1+b:end-b);
    img_x = img_xyz(:,:,1);
    img_y = img_xyz(:,:,2);
    img_z = img_xyz(:,:,3); 
    img_x(nr) = u1(nr);
    img_y(nr) = u2(nr);
    img_z(nr) = u3(nr);
    img_xyz(:,:,1) = img_x;
    img_xyz(:,:,2) = img_y;
    img_xyz(:,:,3) = img_z;
    %figure;imshow(img_range,[0 3]);    
end  


img(:,:,4) = img_range;
img(:,:,5:7) = img_xyz;
figure;imagesc(img(:,:,1:3));
figure;imagesc(img(:,:,4));colormap(gray);


%% configure and calculate saliency
p1 = default_pami_param;
p1.mapWidth = 2;
p1.levels = [2 3 4];
p1.surroundSig = [2 8];
p1.channels = 'V';
p1.subtractMin = 1;
p1.useNormWeights = 0;
p1.nGaborAngles = 8;
p1.NoRangeIndex = NoRangeIndex;
p1.JumpEdgesThres = [0.8 0.9];
p1.RoofEdgesThres = [0.8 0.9];

tic;
[map1 chanmaps1 maps1 chans1]= simpsal(img,p1);
toc

% plot original image with overlayed saliency
figure;imagesc(img(:,:,1:3));hold on;
alpha_matrix = 0.9*ones(size(img,1), size(img,2));
h=imagesc(imresize(map1,[size(img,1) size(img,2)],'nearest'));
set(h,'AlphaData',alpha_matrix);



% plot 
nchan = numel( p1.channels );
for i = 1 : nchan
    
    %chans (feature map for each sub-channel)
    f1(i) = figure;
    sp_dim=[numel(p1.levels) numel(chans1{i})/numel(p1.levels)];
    for j=1:numel(chans1{i})
        subplot(sp_dim(1),sp_dim(2), j);
        imshow(chans1{i}{j},[]);        
    end
    
    % maps (saliency map for each sub-channel)
    f2(i) = figure;
    sp_dim=[numel(p1.levels) numel(maps1{i})/numel(p1.levels)];
    for j=1:numel(maps1{i})
        subplot(sp_dim(1),sp_dim(2), j);
        imshow(maps1{i}{j},[]);
    end
    
    f3(i) = figure;
    imshow(chanmaps1{i},[]);
        

    
end
    

